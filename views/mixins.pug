mixin pointsButton(introChallenge, points)
    - const enabled = currentLan === selectedLan;
    - const unclaimed = introChallenge && !introChallenge.scoreId;
    - const claimed = introChallenge && introChallenge.scoreId;
    - const url = enabled && unclaimed ? `/claim/${introChallenge.id}` : undefined;

    a(href=url class=`relative inline-block rounded-lg ${enabled && unclaimed ? 'bg-(image:--rainbow) bg-animate cursor-pointer p-0.5 ' : 'bg-white p-0.25'}`)
        span(class=`block px-2.5 py-1.5 rounded-lg text-sm font-semibold ${!enabled || (claimed) ? 'bg-highlight-accent' : 'bg-(image:--gradient-pop)'}`)
            span(class=`${enabled && claimed ? 'opacity-70' : ''}`)=`${introChallenge ? 'claim' : 'earn'} ${points} points`
        img(src="/tick.svg" class=`${claimed ? '' : 'hidden'} w-5 absolute -top-1.5 -right-1.5 bg-white rounded-full border`)

mixin navigationLink(path, text)
    a(href=path class=`block px-3 py-2 mb-0.5 text-md rounded-md pb ${currentPath === path ? 'bg-highlight/60' : ''} hover:bg-highlight text-gray-100`)
        =text

mixin dropdown(name, options, selected, required, placeholder, formatLabel)
    div(data-dropdown class="relative")
        select(data-dropdown-input data-player-input name=name class="hidden")
            if !required
                option(value="")= None
            each option in options
                option(value=option.id selected=(selected && option.id === selected.id))=formatLabel(option)
        button(data-dropdown-button type="button" class="w-full py-2 px-3.5 border border-border/80 rounded-sm text-left flex items-center")
            span(class="flex-grow" data-dropdown-selected)= selected ? formatLabel(selected) : placeholder
            img(src="/select-arrow.svg" class="w-5 ml-2 -mr-1")
        div(data-dropdown-menu class="absolute z-1 hidden top-full left-0 w-full bg-highlight rounded-b")
            div(class="py-2 px-2")
                input(data-dropdown-filter class="py-2 px-3.5 border border-border/80 rounded-sm w-full" type="text")
            div(class="max-h-60 overflow-y-auto")
                if !required
                    div(data-dropdown-item tabindex="0" class="py-2 px-3.5 hover:bg-white/20 focus:bg-white/20 cursor-pointer" data-value="") None
                each option in options
                    div(data-dropdown-item tabindex="0" class="py-2 px-3.5 hover:bg-white/20 focus:bg-white/20 cursor-pointer" data-value=option.id)
                        =formatLabel(option)
